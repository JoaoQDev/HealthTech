generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id                String  @id(map: "PK_54115ee388cdb6d86bb4bf5b2ea") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId            String  @db.Uuid
  type              String  @db.VarChar
  provider          String  @db.VarChar
  providerAccountId String  @db.VarChar
  refresh_token     String? @db.VarChar
  access_token      String? @db.VarChar
  expires_at        Int?
  token_type        String? @db.VarChar
  scope             String? @db.VarChar
  id_token          String? @db.VarChar
  session_state     String? @db.VarChar
  user              user    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_60328bf27019ff5498c4b977421")

  @@unique([provider, providerAccountId], map: "UQ_32054f2625f6b8e31319d0e020b")
}

model contratos_exportados {
  id              Int       @id(map: "PK_bdb6478806ea2b388f8783c46fb") @default(autoincrement())
  data            DateTime? @db.Timestamp(6)
  link            String?
  edicao          Int?
  extrato         String?
  uasg            String?
  artigo_inciso   String?
  numero_contrato String?
  numero_processo String?
  licitacao       String?
  numero_pregao   String?
  contratado      String?
  cnpj            String?
  objeto          String?
  valor           Decimal?  @db.Decimal
  vigencia        String?
  data_assinatura DateTime? @db.Date
}

model messages {
  id         Int      @id(map: "PK_18325f38ae6de43878487eff986") @default(autoincrement())
  content    String
  role       String
  created_at DateTime @default(now()) @db.Timestamp(6)
  threadId   String?  @db.Uuid
  threads    threads? @relation(fields: [threadId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_15f9bd2bf472ff12b6ee20012d0")
}

model threads {
  id         String     @id(map: "PK_d8a74804c34fc3900502cd27275") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title      String     @db.VarChar(255)
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime   @default(now()) @db.Timestamp(6)
  userId     String?    @db.Uuid
  messages   messages[]
  user       user?      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_256dd2e4946d6768c5583caa072")
}

model user {
  id            String    @id(map: "PK_cace4a159ff9f2512dd42373760") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name          String?   @db.VarChar
  email         String?   @unique(map: "UQ_e12875dfb3b1d92d7d7c5377e22") @db.VarChar
  emailVerified DateTime? @db.Timestamp(6)
  password      String?   @db.VarChar
  image         String?   @db.VarChar
  account       account[]
  threads       threads[]
}
